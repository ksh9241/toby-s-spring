<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	
	<!-- @Transactional 이 붙은 타입과 메서드에 트랜잭션 부가기능을 담은 프록시를 추가하도록 만들어주는 후처리기 등록 -->
	<tx:annotation-driven/>

	<!-- 코드의 어노테이션을 이용해서 부가적인 빈 설정 또는 초기화 작업을 해주는 후처리기를 등록 -->	
	<context:annotation-config />
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="practice" />
		<property name="password" value="1234" />	
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 디폴트 의존관계 빈 설정 -->
	<bean id="sqlServiceDefault" class="practice.spring.toby.chapter7.DefaultSqlService" />
	
	<bean id="sqlService_Old" class="practice.spring.toby.chapter7.BaseSqlService">
		<property name="sqlReader" ref="sqlReader" />
		<property name="sqlRegistry" ref="sqlRegistry" />
	</bean>
	
	<bean id="sqlService" class="practice.spring.toby.chapter7.OxmSqlService">
		<!-- <property name="unmarshaller" ref="unmarshaller" /> -->
		<property name="sqlRegistry" ref="sqlRegistry" />
	</bean>
	
	<bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" value="practice.spring.toby.chapter7.jaxb" />
	</bean>
	
	<bean id="sqlAdminService" class="practice.spring.toby.chapter7.SqlAdminService">
		<property name="sqlRegistry" ref="sqlRegistry" />
	</bean>
	
	<!-- <bean id="sqlRegistry" class="practice.spring.toby.chapter7.ConcurrentHashMapSqlRegistry" /> -->
	<bean id="sqlRegistry" class="practice.spring.toby.chapter7.HashMapSqlRegistry" />
	
	<bean id="sqlReader" class="practice.spring.toby.chapter7.JaxbXmlSqlReader">
		<property name="sqlmapFile" value="/chapter7/sqlmap.xml" />
	</bean>
		
	<bean id="userDao" class="practice.spring.toby.chapter7.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<property name="sqlService" ref="sqlServiceDefault" />
	</bean>
	
</beans>
